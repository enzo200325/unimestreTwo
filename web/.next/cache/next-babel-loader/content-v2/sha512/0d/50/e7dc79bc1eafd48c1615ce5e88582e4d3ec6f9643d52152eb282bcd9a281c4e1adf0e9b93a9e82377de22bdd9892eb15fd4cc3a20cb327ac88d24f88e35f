{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\Projects\\\\unimestreTwo\\\\web\\\\src\\\\components\\\\Table.tsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useGetLectureTimesQuery } from '../generated/graphql';\nconst useStyles = makeStyles({\n  table: {\n    height: \"100%\"\n  }\n});\nexport default function BasicTable({}) {\n  const classes = useStyles();\n  let [{\n    data\n  }] = useGetLectureTimesQuery();\n  console.log(data);\n  const lectureTimes = data === null || data === void 0 ? void 0 : data.lectureTimes;\n  let row1 = [\"7:30\"],\n      row2 = [\"8:15\"],\n      row3 = [\"9:15\"],\n      row4 = [\"10:00\"],\n      row5 = [\"11:00\"],\n      row6 = [\"11:45\"];\n  let rows = [row1, row2, row3, row4, row5, row6];\n\n  for (let i = 0; i < (lectureTimes === null || lectureTimes === void 0 ? void 0 : lectureTimes.length); i++) {\n    var _lectureTimes$i, _lectureTimes$i2, _lectureTimes$i3;\n\n    let time = (_lectureTimes$i = lectureTimes[i]) === null || _lectureTimes$i === void 0 ? void 0 : _lectureTimes$i.time;\n    let day = (_lectureTimes$i2 = lectureTimes[i]) === null || _lectureTimes$i2 === void 0 ? void 0 : _lectureTimes$i2.day;\n    let teacher = (_lectureTimes$i3 = lectureTimes[i]) === null || _lectureTimes$i3 === void 0 ? void 0 : _lectureTimes$i3.teacher.name;\n\n    switch (time) {\n      case \"7:30\":\n        row1.push(teacher);\n        break;\n\n      case \"8:15\":\n        row2.push(teacher);\n        break;\n\n      case \"9:15\":\n        row3.push(teacher);\n        break;\n\n      case \"10:00\":\n        row4.push(teacher);\n        break;\n\n      case \"11:00\":\n        row5.push(teacher);\n        break;\n\n      case \"11:45\":\n        row6.push(teacher);\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Hor\\xE1rio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Segunda\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Ter\\xE7a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Quarta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Quinta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Sexta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[2]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[3]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[4]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n} // -==================================- // \n// const useStyles = makeStyles({\n//   table: {\n//     height: \"100%\"\n//   },\n// });\n// function createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// ];\n// export default function BasicTable() {\n//   const classes = useStyles();\n//   return (\n//     <TableContainer component={Paper}>\n//       <Table className={classes.table} aria-label=\"simple table\">\n//         <TableHead>\n//           <TableRow>\n//             <TableCell>Horário</TableCell>\n//             <TableCell>Segunda</TableCell>\n//             <TableCell>Terça</TableCell>\n//             <TableCell>Quarta</TableCell>\n//             <TableCell>Quinta</TableCell>\n//             <TableCell>Sexta</TableCell>\n//           </TableRow>\n//         </TableHead>\n//         <TableBody>\n//           {rows.map((row) => (\n//             <TableRow key={row.name}>\n//               <TableCell>\n//                 {row.name}\n//               </TableCell>\n//               <TableCell >{row.calories}</TableCell>\n//               <TableCell >{row.fat}</TableCell>\n//               <TableCell >{row.carbs}</TableCell>\n//               <TableCell >{row.protein}</TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </TableContainer>\n//   );\n// }","map":{"version":3,"sources":["C:/Dev/Projects/unimestreTwo/web/src/components/Table.tsx"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useGetLectureTimesQuery","useStyles","table","height","BasicTable","classes","data","console","log","lectureTimes","row1","row2","row3","row4","row5","row6","rows","i","length","time","day","teacher","name","push","map","row"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useGetLectureTimesQuery } from '../generated/graphql';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    height: \"100%\"\r\n  },\r\n});\r\n\r\nexport default function BasicTable({}) {\r\n  const classes = useStyles();\r\n\r\n  let [{data}] = useGetLectureTimesQuery(); \r\n  console.log(data); \r\n  const lectureTimes = data?.lectureTimes; \r\n  let row1 = [\"7:30\"], \r\n      row2 = [\"8:15\"], \r\n      row3 = [\"9:15\"], \r\n      row4 = [\"10:00\"], \r\n      row5 = [\"11:00\"], \r\n      row6 = [\"11:45\"]; \r\n  let rows = [row1, row2, row3, row4, row5, row6]; \r\n  for (let i = 0; i < lectureTimes?.length; i++) {\r\n    let time = lectureTimes[i]?.time;\r\n    let day = lectureTimes[i]?.day; \r\n    let teacher = lectureTimes[i]?.teacher.name; \r\n    switch (time) {\r\n      case \"7:30\":\r\n        row1.push(teacher); \r\n        break;\r\n      case \"8:15\": \r\n        row2.push(teacher); \r\n        break;\r\n      case \"9:15\": \r\n        row3.push(teacher); \r\n        break;\r\n      case \"10:00\": \r\n        row4.push(teacher); \r\n        break;\r\n      case \"11:00\": \r\n        row5.push(teacher); \r\n        break;\r\n      case \"11:45\": \r\n        row6.push(teacher); \r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Horário</TableCell>\r\n            <TableCell>Segunda</TableCell>\r\n            <TableCell>Terça</TableCell>\r\n            <TableCell>Quarta</TableCell>\r\n            <TableCell>Quinta</TableCell>\r\n            <TableCell>Sexta</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow>\r\n              <TableCell>{row[0]}</TableCell>\r\n              <TableCell >{row[1]}</TableCell>\r\n              <TableCell >{row[2]}</TableCell>\r\n              <TableCell >{row[3]}</TableCell>\r\n              <TableCell >{row[4]}</TableCell>\r\n              <TableCell >{row[5]}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\n// -==================================- // \r\n\r\n// const useStyles = makeStyles({\r\n//   table: {\r\n//     height: \"100%\"\r\n//   },\r\n// });\r\n\r\n// function createData(name: string, calories: number, fat: number, carbs: number, protein: number) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n// ];\r\n\r\n// export default function BasicTable() {\r\n//   const classes = useStyles();\r\n\r\n//   return (\r\n//     <TableContainer component={Paper}>\r\n//       <Table className={classes.table} aria-label=\"simple table\">\r\n//         <TableHead>\r\n//           <TableRow>\r\n//             <TableCell>Horário</TableCell>\r\n//             <TableCell>Segunda</TableCell>\r\n//             <TableCell>Terça</TableCell>\r\n//             <TableCell>Quarta</TableCell>\r\n//             <TableCell>Quinta</TableCell>\r\n//             <TableCell>Sexta</TableCell>\r\n//           </TableRow>\r\n//         </TableHead>\r\n//         <TableBody>\r\n//           {rows.map((row) => (\r\n//             <TableRow key={row.name}>\r\n//               <TableCell>\r\n//                 {row.name}\r\n//               </TableCell>\r\n//               <TableCell >{row.calories}</TableCell>\r\n//               <TableCell >{row.fat}</TableCell>\r\n//               <TableCell >{row.carbs}</TableCell>\r\n//               <TableCell >{row.protein}</TableCell>\r\n//             </TableRow>\r\n//           ))}\r\n//         </TableBody>\r\n//       </Table>\r\n//     </TableContainer>\r\n//   );\r\n// }"]},"metadata":{},"sourceType":"module"}