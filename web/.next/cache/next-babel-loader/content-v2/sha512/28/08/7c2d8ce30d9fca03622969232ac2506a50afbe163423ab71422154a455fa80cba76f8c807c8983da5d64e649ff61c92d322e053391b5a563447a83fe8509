{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\Projects\\\\unimestreTwo\\\\web\\\\src\\\\components\\\\lectureOnTable.tsx\";\nimport React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Button from '@material-ui/core/Button';\nimport { ListForLectureOnTable } from './listForLectureOnTable';\nconst useStyles = makeStyles(theme => createStyles({\n  typography: {\n    padding: theme.spacing(2)\n  },\n  buttonGreen: {\n    backgroundColor: \"#06d16c\"\n  },\n  buttonBlue: {\n    backgroundColor: \"#0f72db\"\n  }\n}));\nexport function LectureOnTable(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      \"aria-describedby\": id,\n      variant: \"contained\",\n      className: !!props.given ? classes.buttonBlue : classes.buttonGreen,\n      onClick: handleClick,\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: id,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'center',\n        horizontal: 'right'\n      },\n      transformOrigin: {\n        vertical: 'center',\n        horizontal: 'left'\n      },\n      children: /*#__PURE__*/_jsxDEV(ListForLectureOnTable, {\n        title: props.title,\n        link: props.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Dev/Projects/unimestreTwo/web/src/components/lectureOnTable.tsx"],"names":["React","makeStyles","createStyles","Popover","Button","ListForLectureOnTable","useStyles","theme","typography","padding","spacing","buttonGreen","backgroundColor","buttonBlue","LectureOnTable","props","classes","anchorEl","setAnchorEl","useState","handleClick","event","currentTarget","handleClose","open","Boolean","id","undefined","given","title","vertical","horizontal","link"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,IAC3BL,YAAY,CAAC;AACXM,EAAAA,UAAU,EAAE;AACVC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADC,GADD;AAIXC,EAAAA,WAAW,EAAE;AACXC,IAAAA,eAAe,EAAE;AADN,GAJF;AAOXC,EAAAA,UAAU,EAAE;AACVD,IAAAA,eAAe,EAAE;AADP;AAPD,CAAD,CADc,CAA5B;AAcA,OAAO,SAASE,cAAT,CAAwBC,KAAxB,EAA+B;AACpC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BlB,KAAK,CAACmB,QAAN,CAAyC,IAAzC,CAAhC;;AAEA,QAAMC,WAAW,GAAIC,KAAD,IAAgD;AAClEH,IAAAA,WAAW,CAACG,KAAK,CAACC,aAAP,CAAX;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAFD;;AAIA,QAAMM,IAAI,GAAGC,OAAO,CAACR,QAAD,CAApB;AACA,QAAMS,EAAE,GAAGF,IAAI,GAAG,gBAAH,GAAsBG,SAArC;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,0BAAkBD,EAA1B;AAA8B,MAAA,OAAO,EAAC,WAAtC;AAAkD,MAAA,SAAS,EAAE,CAAC,CAACX,KAAK,CAACa,KAAR,GAAgBZ,OAAO,CAACH,UAAxB,GAAqCG,OAAO,CAACL,WAA1G;AAAuH,MAAA,OAAO,EAAES,WAAhI;AAAA,gBACGL,KAAK,CAACc;AADT;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,OAAD;AACE,MAAA,EAAE,EAAEH,EADN;AAEE,MAAA,IAAI,EAAEF,IAFR;AAGE,MAAA,QAAQ,EAAEP,QAHZ;AAIE,MAAA,OAAO,EAAEM,WAJX;AAKE,MAAA,YAAY,EAAE;AACZO,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OALhB;AASE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,QADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OATnB;AAAA,6BAcE,QAAC,qBAAD;AAAuB,QAAA,KAAK,EAAEhB,KAAK,CAACc,KAApC;AAA2C,QAAA,IAAI,EAAEd,KAAK,CAACiB;AAAvD;AAAA;AAAA;AAAA;AAAA;AAdF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD","sourcesContent":["import React from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { ListForLectureOnTable } from './listForLectureOnTable';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    typography: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    buttonGreen: {\r\n      backgroundColor: \"#06d16c\"\r\n    },\r\n    buttonBlue: {\r\n      backgroundColor: \"#0f72db\"\r\n    }\r\n  }),\r\n);\r\n\r\nexport function LectureOnTable(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button aria-describedby={id} variant=\"contained\" className={!!props.given ? classes.buttonBlue : classes.buttonGreen} onClick={handleClick}>\r\n        {props.title}\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'right',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'left',\r\n        }}\r\n      >\r\n        <ListForLectureOnTable title={props.title} link={props.link}/>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}