{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Dev/Projects/unimestreTwo/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Dev/Projects/unimestreTwo/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Dev/Projects/unimestreTwo/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Dev\\\\Projects\\\\unimestreTwo\\\\web\\\\src\\\\pages\\\\register.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Paper, makeStyles, Container } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport { useRegisterMutation } from \"../generated/graphql\";\nimport { toErrorMap } from \"../utils/toErrorMap\";\nimport { useRouter } from \"next/router\";\nvar useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  loginPaper: {\n    height: \"400px\",\n    width: \"300px\",\n    margin: \"100px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"black\",\n    marginTop: \"3px\",\n    fontWeight: 500,\n    fontSize: \"0.875rem\",\n    \"&$link:hover\": {\n      cursor: \"pointer\"\n    }\n  }\n});\n\nvar Register = function Register() {\n  _s();\n\n  var router = useRouter();\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      _ = _useRegisterMutation2[0],\n      register = _useRegisterMutation2[1];\n\n  var _useStyles = useStyles(),\n      loginPaper = _useStyles.loginPaper,\n      container = _useStyles.container,\n      form = _useStyles.form,\n      link = _useStyles.link;\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: container,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 8,\n      className: loginPaper,\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: \"\",\n          password: \"\",\n          code: \"\",\n          name: \"\"\n        },\n        onSubmit: /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n            var _mutationResponse$dat;\n\n            var setErrors, mutationResponse;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    setErrors = _ref.setErrors;\n                    _context.next = 3;\n                    return register(values);\n\n                  case 3:\n                    mutationResponse = _context.sent;\n\n                    if ((_mutationResponse$dat = mutationResponse.data) !== null && _mutationResponse$dat !== void 0 && _mutationResponse$dat.registerUser.errors) {\n                      setErrors(toErrorMap(mutationResponse.data.registerUser.errors));\n                    } else if (mutationResponse.data.registerUser.user) {\n                      router.push(\"/\", undefined, {\n                        shallow: false\n                      });\n                    }\n\n                  case 5:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x, _x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }(),\n        children: function children(_ref3) {\n          var values = _ref3.values,\n              handleChange = _ref3.handleChange,\n              handleSubmit = _ref3.handleSubmit,\n              errors = _ref3.errors;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              className: form,\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                error: !!errors.name,\n                helperText: errors.name ? String(errors.name) : null,\n                size: \"small\",\n                name: \"name\",\n                type: \"text\",\n                onChange: handleChange,\n                value: values.name,\n                label: \"Nome\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: !!errors.code,\n                helperText: errors.code ? String(errors.code) : null,\n                size: \"small\",\n                name: \"code\",\n                type: \"text\",\n                onChange: handleChange,\n                value: values.code,\n                label: \"C\\xF3digo de Estudante\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: !!errors.username,\n                helperText: errors.username ? String(errors.username) : null,\n                size: \"small\",\n                name: \"username\",\n                type: \"text\",\n                onChange: handleChange,\n                value: values.username,\n                label: \"Username\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(TextField, {\n                error: !!errors.password,\n                helperText: errors.password ? String(errors.password) : null,\n                size: \"small\",\n                style: {\n                  marginTop: \"20px\"\n                },\n                name: \"password\",\n                type: \"password\",\n                onChange: handleChange,\n                value: values.password,\n                label: \"Senha\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 11\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  marginTop: \"35px\"\n                },\n                type: \"submit\",\n                children: \"Registrar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 11\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Register, \"eIreBdCY405yEEJCEbwQGH+gmHU=\", false, function () {\n  return [useRouter, useRegisterMutation, useStyles];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Dev/Projects/unimestreTwo/web/src/pages/register.tsx"],"names":["Button","TextField","Paper","makeStyles","Container","Formik","useRegisterMutation","toErrorMap","useRouter","useStyles","container","display","justifyContent","loginPaper","height","width","margin","flexDirection","alignItems","form","link","textDecoration","color","marginTop","fontWeight","fontSize","cursor","Register","router","_","register","username","password","code","name","values","setErrors","mutationResponse","data","registerUser","errors","user","push","undefined","shallow","handleChange","handleSubmit","String"],"mappings":"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","sourcesContent":["import { Button, TextField, Box, Paper, makeStyles, Container } from \"@material-ui/core\";\r\nimport { ErrorMessage, Formik } from \"formik\"; \r\nimport { useLoginMutation, useRegisterMutation } from \"../generated/graphql\";\r\nimport { toErrorMap } from \"../utils/toErrorMap\";\r\nimport Link from \"next/link\"; \r\nimport { useRouter } from \"next/router\"; \r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: \"flex\", \r\n    justifyContent: \"center\", \r\n  },\r\n  loginPaper: {\r\n    height: \"400px\",\r\n    width: \"300px\",\r\n    margin: \"100px\",\r\n    display: \"flex\", \r\n    justifyContent: \"center\", \r\n    flexDirection: \"row\", \r\n    alignItems: \"center\", \r\n  }, \r\n  form: {\r\n    display: \"flex\", \r\n    flexDirection: \"column\", \r\n  }, \r\n  link: {\r\n    textDecoration: \"none\", \r\n    color: \"black\", \r\n    marginTop: \"3px\", \r\n    fontWeight: 500,\r\n    fontSize: \"0.875rem\", \r\n    \"&$link:hover\": {\r\n      cursor: \"pointer\",\r\n    }\r\n\r\n  },\r\n})\r\n\r\nconst Register = () => {\r\n  const router = useRouter(); \r\n  const [ _, register] = useRegisterMutation(); \r\n  const { loginPaper, container, form, link} = useStyles(); \r\n\r\n  return (\r\n    <Container className={container}>\r\n    <Paper elevation={8} className={loginPaper}>\r\n      <Formik initialValues={{username: \"\", password: \"\", code: \"\", name: \"\"}} onSubmit={async(values, {setErrors}) => {\r\n        const mutationResponse = await register(values); \r\n        if (mutationResponse.data?.registerUser.errors) {\r\n          setErrors(toErrorMap(mutationResponse.data.registerUser.errors)); \r\n        } else if (mutationResponse.data.registerUser.user) {\r\n          router.push(\"/\", undefined,  {\r\n            shallow: false\r\n          }); \r\n        }\r\n      }}>\r\n        {({values, handleChange, handleSubmit, errors}) => (\r\n          <div>\r\n          <form className={form} onSubmit={handleSubmit}>\r\n          <TextField error={!!errors.name} helperText={errors.name? String(errors.name) : null} size=\"small\" name=\"name\" type=\"text\" onChange={handleChange} value={values.name} label=\"Nome\" variant=\"outlined\"/>\r\n          <TextField error={!!errors.code} helperText={errors.code? String(errors.code) : null} size=\"small\" name=\"code\" type=\"text\" onChange={handleChange} value={values.code} label=\"Código de Estudante\" variant=\"outlined\"/>\r\n          <TextField error={!!errors.username} helperText={errors.username ? String(errors.username) : null} size=\"small\" name=\"username\" type=\"text\" onChange={handleChange} value={values.username} label=\"Username\" variant=\"outlined\"/>\r\n          <TextField error={!!errors.password} helperText={errors.password ? String(errors.password) : null} size=\"small\" style={{marginTop: \"20px\"}} name=\"password\" type=\"password\" onChange={handleChange} value={values.password} label=\"Senha\" variant=\"outlined\"/>\r\n          <Button style={{marginTop: \"35px\"}} type=\"submit\">Registrar</Button>\r\n          </form>\r\n          </div>\r\n        )} \r\n      </Formik>\r\n    </Paper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Register; "]},"metadata":{},"sourceType":"module"}