{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\Projects\\\\unimestreTwo\\\\web\\\\pages\\\\_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../styles/globals.css\";\nimport { createClient, Provider } from \"urql\";\nconst client = createClient({\n  url: \"http://localhost:5000/graphql\",\n  fetchOptions: {\n    credentials: \"include\"\n  }\n});\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    value: client,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Dev/Projects/unimestreTwo/web/pages/_app.tsx"],"names":["createClient","Provider","client","url","fetchOptions","credentials","MyApp","Component","pageProps"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AACA,SAASA,YAAT,EAAuBC,QAAvB,QAAuC,MAAvC;AAEA,MAAMC,MAAM,GAAGF,YAAY,CAAC;AAC1BG,EAAAA,GAAG,EAAE,+BADqB;AAE1BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,WAAW,EAAE;AADD;AAFY,CAAD,CAA3B;;AAOA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,sBACA,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEN,MAAjB;AAAA,2BACC,QAAC,SAAD,oBAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADA;AAKD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../styles/globals.css\"; \nimport { createClient, Provider } from \"urql\"\n\nconst client = createClient({\n  url: \"http://localhost:5000/graphql\", \n  fetchOptions: {\n    credentials: \"include\"\n  }\n})\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n  <Provider value={client}>\n   <Component {...pageProps} />\n  </Provider>\n  ); \n}\n\nexport default MyApp\n"]},"metadata":{},"sourceType":"module"}