{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Dev/Projects/unimestreTwo/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Dev/Projects/unimestreTwo/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Dev/Projects/unimestreTwo/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Dev\\\\Projects\\\\unimestreTwo\\\\web\\\\src\\\\pages\\\\notes.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport sha1 from \"js-sha1\";\nimport { useCreateNoteMutation } from \"../generated/graphql\";\nvar URL = \"https://api.cloudinary.com/v1_1/duczgjqsk/image/upload\";\n\nvar Notes = function Notes() {\n  _s();\n\n  var _inputValue$;\n\n  var _useState = useState([]),\n      inputValue = _useState[0],\n      setInputValue = _useState[1];\n\n  var _useCreateNoteMutatio = useCreateNoteMutation(),\n      _useCreateNoteMutatio2 = _slicedToArray(_useCreateNoteMutatio, 2),\n      _ = _useCreateNoteMutatio2[0],\n      createNote = _useCreateNoteMutatio2[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var formData, fileToSend, timestamp, signature, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              formData = new FormData();\n              fileToSend = inputValue[0];\n              timestamp = (Date.now() / 1000 | 0).toString();\n              signature = sha1(\"eager=w_400,h_300,c_pad|w_260,h_200,c_crop&public_id=sample_image&timestamp=\".concat(timestamp, \"NDrSpdzXUu_RpJ1ssZLMSOMstAQ\"));\n              formData.append(\"file\", fileToSend);\n              formData.append(\"api_key\", \"957516873698331\");\n              formData.append(\"eager\", \"w_400,h_300,c_pad|w_260,h_200,c_crop\");\n              formData.append(\"public_id\", \"sample_image\");\n              formData.append(\"timestamp\", timestamp);\n              formData.append(\"signature\", signature);\n              _context.next = 13;\n              return fetch(URL, {\n                method: \"POST\",\n                body: formData\n              });\n\n            case 13:\n              result = _context.sent;\n\n              if (!result) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.t0 = console;\n              _context.next = 18;\n              return result.json();\n\n            case 18:\n              _context.t1 = _context.sent;\n\n              _context.t0.log.call(_context.t0, _context.t1);\n\n              _context.next = 22;\n              return createNote({\n                isImage: true,\n                lectureId: 4,\n                user: \"enzo2003\",\n                link: result.url\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      value: (_inputValue$ = inputValue[0]) === null || _inputValue$ === void 0 ? void 0 : _inputValue$.filename,\n      onChange: function onChange(e) {\n        return setInputValue(Array.from(e.target.files));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: function onClick(e) {\n        return handleSubmit(e);\n      },\n      children: \"Submit image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Notes, \"FOF3Y5ypnV9RnesD7bD10uoaVJA=\", false, function () {\n  return [useCreateNoteMutation];\n});\n\n_c = Notes;\nexport default Notes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Notes\");","map":{"version":3,"sources":["C:/Dev/Projects/unimestreTwo/web/src/pages/notes.tsx"],"names":["useState","sha1","useCreateNoteMutation","URL","Notes","inputValue","setInputValue","_","createNote","handleSubmit","e","preventDefault","formData","FormData","fileToSend","timestamp","Date","now","toString","signature","append","fetch","method","body","result","console","json","log","isImage","lectureId","user","link","url","filename","Array","from","target","files"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AAEA,IAAMC,GAAG,GAAG,wDAAZ;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA;;AAAA,kBACkBJ,QAAQ,CAAC,EAAD,CAD1B;AAAA,MACXK,UADW;AAAA,MACCC,aADD;;AAAA,8BAEMJ,qBAAqB,EAF3B;AAAA;AAAA,MAEXK,CAFW;AAAA,MAERC,UAFQ;;AAIlB,MAAMC,YAAY;AAAA,wEAAG,iBAAOC,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBA,cAAAA,CAAC,CAACC,cAAF;AACMC,cAAAA,QAFa,GAEF,IAAIC,QAAJ,EAFE;AAGbC,cAAAA,UAHa,GAGAT,UAAU,CAAC,CAAD,CAHV;AAIfU,cAAAA,SAJe,GAIH,CAACC,IAAI,CAACC,GAAL,KAAa,IAAb,GAAoB,CAArB,EAAwBC,QAAxB,EAJG;AAKbC,cAAAA,SALa,GAKDlB,IAAI,uFAAgFc,SAAhF,iCALH;AAMnBH,cAAAA,QAAQ,CAACQ,MAAT,CAAgB,MAAhB,EAAwBN,UAAxB;AACAF,cAAAA,QAAQ,CAACQ,MAAT,CAAgB,SAAhB,EAA2B,iBAA3B;AACAR,cAAAA,QAAQ,CAACQ,MAAT,CAAgB,OAAhB,EAAyB,sCAAzB;AACAR,cAAAA,QAAQ,CAACQ,MAAT,CAAgB,WAAhB,EAA6B,cAA7B;AACAR,cAAAA,QAAQ,CAACQ,MAAT,CAAgB,WAAhB,EAA6BL,SAA7B;AACAH,cAAAA,QAAQ,CAACQ,MAAT,CAAgB,WAAhB,EAA6BD,SAA7B;AAXmB;AAAA,qBAaEE,KAAK,CAAClB,GAAD,EAAM;AAC9BmB,gBAAAA,MAAM,EAAE,MADsB;AAE9BC,gBAAAA,IAAI,EAAEX;AAFwB,eAAN,CAbP;;AAAA;AAabY,cAAAA,MAba;;AAAA,mBAkBfA,MAlBe;AAAA;AAAA;AAAA;;AAAA,4BAmBjBC,OAnBiB;AAAA;AAAA,qBAmBCD,MAAM,CAACE,IAAP,EAnBD;;AAAA;AAAA;;AAAA,0BAmBTC,GAnBS;;AAAA;AAAA,qBAoBXnB,UAAU,CAAC;AAACoB,gBAAAA,OAAO,EAAE,IAAV;AAAgBC,gBAAAA,SAAS,EAAE,CAA3B;AAA8BC,gBAAAA,IAAI,EAAE,UAApC;AAAgDC,gBAAAA,IAAI,EAAEP,MAAM,CAACQ;AAA7D,eAAD,CApBC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZvB,YAAY;AAAA;AAAA;AAAA,KAAlB;;AAwBA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,kBAAEJ,UAAU,CAAC,CAAD,CAAZ,iDAAE,aAAe4B,QAAzC;AAAmD,MAAA,QAAQ,EAAE,kBAACvB,CAAD;AAAA,eAAOJ,aAAa,CAAC4B,KAAK,CAACC,IAAN,CAAWzB,CAAC,CAAC0B,MAAF,CAASC,KAApB,CAAD,CAApB;AAAA;AAA7D;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,iBAAC3B,CAAD;AAAA,eAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CAlCD;;GAAMN,K;UAEoBF,qB;;;KAFpBE,K;AAoCN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\";\r\nimport sha1 from \"js-sha1\"; \r\nimport { useCreateNoteMutation } from \"../generated/graphql\"\r\n\r\nconst URL = \"https://api.cloudinary.com/v1_1/duczgjqsk/image/upload\"; \r\n\r\nconst Notes = () => {\r\n  const [inputValue, setInputValue] = useState([]); \r\n  const [_, createNote ]= useCreateNoteMutation()\r\n\r\n  const handleSubmit = async (e: any) => {\r\n    e.preventDefault(); \r\n    const formData = new FormData(); \r\n    const fileToSend = inputValue[0]; \r\n    let timestamp = (Date.now() / 1000 | 0).toString();\r\n    const signature = sha1(`eager=w_400,h_300,c_pad|w_260,h_200,c_crop&public_id=sample_image&timestamp=${timestamp}NDrSpdzXUu_RpJ1ssZLMSOMstAQ`); \r\n    formData.append(\"file\", fileToSend);\r\n    formData.append(\"api_key\", \"957516873698331\");\r\n    formData.append(\"eager\", \"w_400,h_300,c_pad|w_260,h_200,c_crop\");\r\n    formData.append(\"public_id\", \"sample_image\");\r\n    formData.append(\"timestamp\", timestamp);\r\n    formData.append(\"signature\", signature);\r\n\r\n    const result = await fetch(URL, { \r\n      method: \"POST\", \r\n      body: formData, \r\n    })\r\n\r\n    if (result) {\r\n      console.log(await result.json()); \r\n      await createNote({isImage: true, lectureId: 4, user: \"enzo2003\", link: result.url}); \r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input type=\"file\" value={inputValue[0]?.filename} onChange={(e) => setInputValue(Array.from(e.target.files))}/>\r\n      <button type=\"submit\" onClick={(e) => handleSubmit(e)}>Submit image</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Notes; "]},"metadata":{},"sourceType":"module"}