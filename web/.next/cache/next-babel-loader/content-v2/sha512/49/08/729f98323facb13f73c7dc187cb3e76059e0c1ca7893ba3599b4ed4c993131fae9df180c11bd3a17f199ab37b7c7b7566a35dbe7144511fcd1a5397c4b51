{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\Projects\\\\unimestreTwo\\\\web\\\\src\\\\pages\\\\[subjectName]\\\\index.tsx\";\nimport { useRouter } from \"next/router\";\nimport { useTeacherFromSubjectNameQuery } from \"../../generated/graphql\";\n\nconst SubjectPage = () => {\n  var _teachers$, _teachers$$data;\n\n  const router = useRouter();\n  const {\n    subjectName\n  } = router.query;\n  let teachers = useTeacherFromSubjectNameQuery({\n    variables: {\n      subjectName: subjectName\n    }\n  });\n  teachers = (_teachers$ = teachers[0]) === null || _teachers$ === void 0 ? void 0 : (_teachers$$data = _teachers$.data) === null || _teachers$$data === void 0 ? void 0 : _teachers$$data.getTeacherFromSubjectName;\n  console.log(teachers);\n  let lecturesList = [];\n\n  if (teachers) {\n    var _teachers$2, _teachers$2$lectures$;\n\n    console.log((_teachers$2 = teachers[0]) === null || _teachers$2 === void 0 ? void 0 : (_teachers$2$lectures$ = _teachers$2.lectures[0]) === null || _teachers$2$lectures$ === void 0 ? void 0 : _teachers$2$lectures$.weekDay);\n    teachers.forEach(teacher => {\n      let lectures = teacher === null || teacher === void 0 ? void 0 : teacher.lectures;\n      let name = teacher === null || teacher === void 0 ? void 0 : teacher.teacher;\n      lecturesList.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), lectures.map(lecture => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: lecture === null || lecture === void 0 ? void 0 : lecture.weekDay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: lecture === null || lecture === void 0 ? void 0 : lecture.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this));\n    });\n  }\n\n  return {\n    lecturesList\n  };\n};\n\nexport default SubjectPage;","map":{"version":3,"sources":["C:/Dev/Projects/unimestreTwo/web/src/pages/[subjectName]/index.tsx"],"names":["useRouter","useTeacherFromSubjectNameQuery","SubjectPage","router","subjectName","query","teachers","variables","data","getTeacherFromSubjectName","console","log","lecturesList","lectures","weekDay","forEach","teacher","name","push","map","lecture","time"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAASC,8BAAT,QAA+C,yBAA/C;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,QAAM;AAACI,IAAAA;AAAD,MAAqBD,MAAM,CAACE,KAAlC;AAEA,MAAIC,QAAa,GAAGL,8BAA8B,CAAC;AAACM,IAAAA,SAAS,EAAE;AAACH,MAAAA,WAAW,EAAEA;AAAd;AAAZ,GAAD,CAAlD;AACAE,EAAAA,QAAQ,iBAAGA,QAAQ,CAAC,CAAD,CAAX,kEAAG,WAAaE,IAAhB,oDAAG,gBAAmBC,yBAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,MAAIM,YAAY,GAAG,EAAnB;;AACA,MAAIN,QAAJ,EAAc;AAAA;;AACZI,IAAAA,OAAO,CAACC,GAAR,gBAAYL,QAAQ,CAAC,CAAD,CAApB,yEAAY,YAAaO,QAAb,CAAsB,CAAtB,CAAZ,0DAAY,sBAA0BC,OAAtC;AACAR,IAAAA,QAAQ,CAACS,OAAT,CAAiBC,OAAO,IAAI;AAC1B,UAAIH,QAAQ,GAAGG,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEH,QAAxB;AACA,UAAII,IAAI,GAAGD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEA,OAApB;AACAJ,MAAAA,YAAY,CAACM,IAAb,eACE;AAAA,gCACE;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGJ,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAI;AACvB,8BACE;AAAA,oCACA;AAAA,wBAAKA,OAAL,aAAKA,OAAL,uBAAKA,OAAO,CAAEN;AAAd;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKM,OAAL,aAAKA,OAAL,uBAAKA,OAAO,CAAEC;AAAd;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA,0BADF;AAMD,SAPA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAaD,KAhBD;AAiBD;;AAED,SACE;AAACT,IAAAA;AAAD,GADF;AAGD,CAhCD;;AAkCA,eAAeV,WAAf","sourcesContent":["import {useRouter} from \"next/router\";\r\nimport { useTeacherFromSubjectNameQuery } from \"../../generated/graphql\";\r\n\r\n\r\nconst SubjectPage = () => {\r\n  const router = useRouter(); \r\n  const {subjectName}: any = router.query\r\n\r\n  let teachers: any = useTeacherFromSubjectNameQuery({variables: {subjectName: subjectName}});   \r\n  teachers = teachers[0]?.data?.getTeacherFromSubjectName; \r\n  console.log(teachers); \r\n  let lecturesList = []; \r\n  if (teachers) {\r\n    console.log(teachers[0]?.lectures[0]?.weekDay); \r\n    teachers.forEach(teacher => {\r\n      let lectures = teacher?.lectures; \r\n      let name = teacher?.teacher; \r\n      lecturesList.push(\r\n        <div>\r\n          <h1>{name}</h1>\r\n          {lectures.map(lecture => {\r\n            return (\r\n              <>\r\n              <h4>{lecture?.weekDay}</h4>\r\n              <h4>{lecture?.time}</h4>\r\n              </>\r\n            )\r\n          })}\r\n        </div>\r\n      )\r\n    })\r\n  } \r\n  \r\n  return (\r\n    {lecturesList}\r\n  )\r\n}\r\n\r\nexport default SubjectPage; "]},"metadata":{},"sourceType":"module"}